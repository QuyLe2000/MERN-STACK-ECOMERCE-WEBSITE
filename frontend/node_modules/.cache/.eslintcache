[{"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\index.js":"1","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\store.js":"2","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reportWebVitals.js":"3","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\App.js":"4","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\productReducer.js":"5","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\orderReducer.js":"6","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\userReducers.js":"7","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\cartReducer.js":"8","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\footer.jsx":"9","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ShippingScreen.jsx":"10","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\Header.jsx":"11","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\LoginScreen.jsx":"12","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\CartScreen.jsx":"13","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\HomeScreen.jsx":"14","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\OrderScreen.jsx":"15","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProfileScreen.jsx":"16","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\PaymentScreen.jsx":"17","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProductDetails.jsx":"18","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"19","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\RegisterScreen.jsx":"20","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\productConstant.js":"21","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\cartConstant.js":"22","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\orderConstant.js":"23","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\productActions.js":"24","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\orderAction.js":"25","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\userContants.js":"26","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\userAction.js":"27","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\FromContainer.jsx":"28","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\Loader.jsx":"29","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\cartAction.js":"30","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\Message.jsx":"31","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\Rating.jsx":"32","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\CheckoutStep.jsx":"33","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProductScreen.jsx":"34"},{"size":597,"mtime":1618340622390,"results":"35","hashOfConfig":"36"},{"size":1821,"mtime":1622442813111,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1606112611288,"results":"38","hashOfConfig":"36"},{"size":1569,"mtime":1621939478600,"results":"39","hashOfConfig":"36"},{"size":1043,"mtime":1618688330098,"results":"40","hashOfConfig":"36"},{"size":2768,"mtime":1622446697782,"results":"41","hashOfConfig":"36"},{"size":2047,"mtime":1622446146681,"results":"42","hashOfConfig":"36"},{"size":1126,"mtime":1621594607862,"results":"43","hashOfConfig":"36"},{"size":404,"mtime":1638426547960,"results":"44","hashOfConfig":"36"},{"size":2775,"mtime":1621520499938,"results":"45","hashOfConfig":"36"},{"size":1887,"mtime":1620262725192,"results":"46","hashOfConfig":"36"},{"size":2348,"mtime":1620178011439,"results":"47","hashOfConfig":"36"},{"size":3817,"mtime":1619207257439,"results":"48","hashOfConfig":"36"},{"size":1018,"mtime":1618600009666,"results":"49","hashOfConfig":"36"},{"size":5985,"mtime":1621950272013,"results":"50","hashOfConfig":"36"},{"size":5842,"mtime":1622445366706,"results":"51","hashOfConfig":"36"},{"size":1450,"mtime":1621599106924,"results":"52","hashOfConfig":"36"},{"size":2845,"mtime":1619031077832,"results":"53","hashOfConfig":"36"},{"size":4788,"mtime":1621598321206,"results":"54","hashOfConfig":"36"},{"size":3372,"mtime":1620434593879,"results":"55","hashOfConfig":"36"},{"size":378,"mtime":1618687874138,"results":"56","hashOfConfig":"36"},{"size":242,"mtime":1621588990324,"results":"57","hashOfConfig":"36"},{"size":818,"mtime":1622445845960,"results":"58","hashOfConfig":"36"},{"size":1198,"mtime":1618688812661,"results":"59","hashOfConfig":"36"},{"size":3322,"mtime":1622443076002,"results":"60","hashOfConfig":"36"},{"size":921,"mtime":1622445929184,"results":"61","hashOfConfig":"36"},{"size":3646,"mtime":1622446276934,"results":"62","hashOfConfig":"36"},{"size":353,"mtime":1621520414176,"results":"63","hashOfConfig":"36"},{"size":410,"mtime":1618599722179,"results":"64","hashOfConfig":"36"},{"size":1249,"mtime":1621590685925,"results":"65","hashOfConfig":"36"},{"size":204,"mtime":1618599915778,"results":"66","hashOfConfig":"36"},{"size":1579,"mtime":1608670911899,"results":"67","hashOfConfig":"36"},{"size":1383,"mtime":1621522476100,"results":"68","hashOfConfig":"36"},{"size":917,"mtime":1610052936715,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"flh6zp",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\index.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\store.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reportWebVitals.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\App.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\productReducer.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\orderReducer.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\userReducers.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\reducers\\cartReducer.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\footer.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ShippingScreen.jsx",["142"],"import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FromContainer from \"../components/shared/FromContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport ChekcoutStep from \"../components/shared/CheckoutStep\";\r\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalcode, setPostalcode] = useState(shippingAddress.postalcode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch\r\n    dispatch(saveShippingAddress({ address, city, postalcode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutStep step1 step2 />\r\n      <FromContainer>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"address\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"city\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postalcode\">\r\n            <Form.Label>PostalCode</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter postalcode\"\r\n              value={postalcode}\r\n              onChange={(e) => setPostalcode(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"country\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter Country\"\r\n              value={country}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              required\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            continue\r\n          </Button>\r\n        </Form>\r\n      </FromContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\Header.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\LoginScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\CartScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\HomeScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\OrderScreen.jsx",["143"],"import React, { useState, useEffect } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/shared/Message\";\r\nimport Loader from \"../components/shared/Loader\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successpay } = orderPay;\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!order || successpay) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successpay]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup.Item variant=\"flush\">\r\n            <h2>Shipping</h2>\r\n            <p>\r\n              <strong>Name : </strong>\r\n              {order.user.name}\r\n            </p>\r\n            <p>\r\n              <strong>Email : </strong>\r\n              {order.user.email}\r\n            </p>\r\n            <p>\r\n              <strong>Address :</strong>\r\n              {order.shippingAddress.address}&nbsp;\r\n              {order.shippingAddress.city}&nbsp;\r\n              {order.shippingAddress.postalcode}&nbsp;\r\n              {order.shippingAddress.country}&nbsp;\r\n            </p>\r\n            {order.isDeliverd ? (\r\n              <Message variant=\"success\">Paid On {order.isDeliverd}</Message>\r\n            ) : (\r\n              <Message variant=\"danger\">Not Deliverd</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <h2>Payment Method</h2>\r\n            <p>\r\n              <strong>Method :</strong>\r\n              <strong>{order.paymentMethod}</strong>\r\n            </p>\r\n            {order.isPaid ? (\r\n              <Message variant=\"success\">Paid On {order.paidAt}</Message>\r\n            ) : (\r\n              <Message variant=\"danger\">Not Paid</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <h2>Order Items</h2>\r\n            {order.orderItems.length === 0 ? (\r\n              <Message>Your Cart is Empty</Message>\r\n            ) : (\r\n              <ListGroup variant=\"flush\">\r\n                {order.orderItems.map((item, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    <Row>\r\n                      <Col md={1}>\r\n                        <Image src={item.image} alt={item.name} fluid />\r\n                      </Col>\r\n                      <Col>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        {item.qty} X ${item.price} = ${item.price}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </ListGroup.Item>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          {!order.isPaid && (\r\n            <ListGroup.Item>\r\n              {loadingPay && <Loader />}\r\n              {!sdkReady ? (\r\n                <Loader />\r\n              ) : (\r\n                <PayPalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={successPaymentHandler}\r\n                />\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProfileScreen.jsx",["144","145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/shared/Message\";\r\nimport Loader from \"../components/shared/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\r\nimport { listMyOrders } from \"../actions/orderAction\";\r\nimport { ORDER_CREATE_REQUEST } from \"../constants/orderConstant\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, orders, error: errorOrders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, user, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //dispatch\r\n    dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h1>Update Information</h1>\r\n          {error && <Message varient=\"danger\">{error}</Message>}\r\n          {success && <Message variant=\"success\">Profile Updated</Message>}\r\n          {loading && <Loader />}\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"enter password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"confirmPassword\">\r\n              <Form.Label>COnfirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Re-enter password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\" varient=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h1>My Orders</h1>\r\n          {loadingOrders ? (\r\n            <Loader />\r\n          ) : errorOrders ? (\r\n            <Message variant=\"danger\">{errorOrders}</Message>\r\n          ) : (\r\n            <Table striped bordered hover responsive className=\"table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>DATE</td>\r\n                  <td>TOTAL</td>\r\n                  <td>PAID</td>\r\n                  <td>DELIVERD</td>\r\n                  <td></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDeleverd ? (\r\n                        order.deleverdAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/order/${order._id}`}>\r\n                        <Button variant=\"light\">Details</Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\PaymentScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProductDetails.jsx",["147","148"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Button,\r\n  Image,\r\n  ListGroupItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nconst ProductDetails = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-arrow-left    \"></i>\r\n        &nbsp; GO BACK\r\n      </Link>\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroupItem>\r\n              <h3>{product.name}</h3>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} Reviews`}\r\n              />\r\n            </ListGroupItem>\r\n            <ListGroupItem>Price : ${product.price}</ListGroupItem>\r\n            <ListGroupItem>{product.description}</ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroupItem>\r\n            <Row>\r\n              <Col>Status :</Col>\r\n              <Col>\r\n                {product.countInStock > 0 ? \"In Stock \" : \"out of stock\"}\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n          {product.countInStock > 0 && (\r\n            <ListGroupItem>\r\n              <Row>\r\n                <Col>Qty</Col>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={qty}\r\n                  onChange={(e) => setQty(e.target.value)}\r\n                >\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Row>\r\n            </ListGroupItem>\r\n          )}\r\n          <ListGroupItem>\r\n            <Button\r\n              className=\"btn-block\"\r\n              type=\"button\"\r\n              onClick={addToCartHandler}\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </ListGroupItem>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\RegisterScreen.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\productConstant.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\cartConstant.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\orderConstant.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\productActions.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\orderAction.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\constants\\userContants.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\userAction.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\FromContainer.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\Loader.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\actions\\cartAction.js",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\Message.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\Rating.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\components\\shared\\CheckoutStep.jsx",[],"E:\\Tieu Luan Chuyen Nganh\\shopping-app\\frontend\\src\\screens\\ProductScreen.jsx",[],{"ruleId":"149","severity":1,"message":"150","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":20},{"ruleId":"149","severity":1,"message":"153","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":16},{"ruleId":"149","severity":1,"message":"154","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"155","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":30},{"ruleId":"149","severity":1,"message":"156","line":17,"column":19,"nodeType":"151","messageId":"152","endLine":17,"endColumn":29},{"ruleId":"149","severity":1,"message":"157","line":19,"column":11,"nodeType":"151","messageId":"152","endLine":19,"endColumn":18},{"ruleId":"149","severity":1,"message":"158","line":19,"column":20,"nodeType":"151","messageId":"152","endLine":19,"endColumn":25},"no-unused-vars","'ChekcoutStep' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","'ORDER_CREATE_REQUEST' is defined but never used.","'setMessage' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used."]